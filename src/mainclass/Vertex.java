/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainclass;
import javax.swing.*;
import java.util.*;
import java.lang.*;
import java.io.*;
import static mainclass.MainClass.*;
/**
 *
 * @author aadityagadhave
 */

class sortV implements Comparator<Graph>
{
        public int compare(Graph g1, Graph g2)
        {
            String name1=g1.getName();
            String name2=g2.getName();
            
            if(name1.compareTo(name2)>0)
                return 1;
            else
                return -1;
        }
}

public class Vertex extends javax.swing.JFrame {

    /**
     * Creates new form Vertex
     */
    public Vertex() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();

        jButton11.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton11.setText("Input Path");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Output Path");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Choose the Operation to be Performed ");

        jButton1.setFont(new java.awt.Font("Apple Braille", 0, 14)); // NOI18N
        jButton1.setText("Add Vertex");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Apple Braille", 0, 14)); // NOI18N
        jButton2.setText("Search Vertex");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Apple Braille", 0, 14)); // NOI18N
        jButton3.setText("Delete Vertex");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Apple Braille", 0, 14)); // NOI18N
        jButton4.setText("Modify Vertex");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Apple Braille", 0, 14)); // NOI18N
        jButton5.setText("Add Edge");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Apple Braille", 0, 14)); // NOI18N
        jButton6.setText("Search Edge");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Apple Braille", 0, 14)); // NOI18N
        jButton7.setText("Delete Edge");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Apple Braille", 0, 14)); // NOI18N
        jButton8.setText("Modify Edge");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Apple Braille", 0, 14)); // NOI18N
        jButton9.setText("Input File");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Apple Braille", 0, 14)); // NOI18N
        jButton10.setText("Output File");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Apple Braille", 0, 14)); // NOI18N
        jButton13.setText("Shortest Path");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Apple Braille", 0, 13)); // NOI18N
        jButton14.setText("Interact");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(227, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(236, 236, 236))
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(93, 93, 93))
            .addGroup(layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(101, 101, 101)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        new AddVertex().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        new SearchVertex().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new DeleteVertex().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        new ModifyVertex().setVisible(true);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        new AddEdge().setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        new SearchEdge().setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        new DeleteEdge().setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        new ModifyEdge().setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed
    
    Graph searchTo(String s)
    {
        int i;
        
        for(i=0;i<list.size();i++)
        {
            Graph g=list.get(i);
            
            if(g.getName().equals(s))
            {
                //JOptionPane.showMessageDialog(null, g.getName());
                return g;
            }
        }
        
        Graph g =new Graph(" ",0,0);
        
        return g;
    }
    void createEdge(String from ,String to, int w)
    {
        if(!hm.containsKey(from))
        {
            ArrayList<Graph>al = new ArrayList<Graph>();
            
            Graph g=searchTo(to);
            Graph g1=new Graph(g.getName(),g.getX(),g.getY());
            g1.setWeight(w);
            al.add(g1);
            
            hm.put(from, al);
        }
        else
        {
            ArrayList<Graph>al = hm.get(from);
            
            Graph g=searchTo(to);
            
            Graph g1=new Graph(g.getName(),g.getX(),g.getY());
            g1.setWeight(w);
            
            al.add(g1);
            
            //hm.put(from, al);
        }
    }
    int checkCoords(double x,double y)
    {
        int i;
        
        for(i=0;i<list.size();i++)
        {
            Graph g=list.get(i);
            
            if(Math.pow(g.getX()-x,2)+Math.pow(g.getY()-y,2)<=400)
                return 0;
        }
        
        return 1;
    }
    
    int checkName(String s)
    {
        int i;
        
        for(i=0;i<list.size();i++)
        {
            Graph g=list.get(i);
            
            if(g.getName().equals(s))
                return 0;
        }
        
        return 1;
    }
    
    int checkEdge(String from, String to)
    {
        if(hm.containsKey(from))
        {
            ArrayList<Graph>al=hm.get(from);
            
            int i;
            
            for(i=0;i<al.size();i++)
            {
                Graph g=al.get(i);
                
                if(g.getName().equals(to))
                    return 0;
            }
            
            return 1;
        }
        
        return 1;
    }
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try
        {
           String file=JOptionPane.showInputDialog("Enter file location");
          
           File f=new File(file);
           Scanner s=new Scanner(f);
           
           int sizeVer=s.nextInt();
           int i,j;
           int fl=0;         
           
           for(i=0;i<sizeVer;i++)
           {
               String name = s.next();
               String x = s.next();
               String y = s.next();
               
               int c=checkCoords(Double.parseDouble(x),Double.parseDouble(y));
               int c1=checkName(name);
               
               if(c==0 || c1==0)
               {
                   fl=1;
                   break;
               }
               Graph g =new Graph(name,Double.parseDouble(x),Double.parseDouble(y));
               
               list.add(g);
               //JOptionPane.showMessageDialog(null, name);
           }
           
           if(fl==0)
           {
                int sizeEdg=s.nextInt();
           
                for(i=0;i<sizeEdg;i++)
                {
                    String from = s.next();
                    String to = s.next();
                    int weight = s.nextInt();
                    
                    int c2=checkEdge(from,to);
                    
                    if(c2==0)
                    {
                        fl=1;
                        break;
                    }
                    createEdge(from,to,weight);

                }
                
                if(fl==1)
                {
                    JOptionPane.showMessageDialog(null, "Edge Present");
                }
                else
                {
                    result();
                    JOptionPane.showMessageDialog(null, "Successfully processed");
                }
                //displayHm();
                
           }
           else
               JOptionPane.showMessageDialog(null, "Vertex coinciding");
           
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }//GEN-LAST:event_jButton9ActionPerformed
    
    static TreeSet ts=new TreeSet();
    static HashMap<String,Integer>ind= new HashMap<String,Integer>();
    static HashMap<Integer,String>revInd= new HashMap<Integer,String>();
    static int si=0;
    static int flgi=0;
    
    static void result()
    {
                    
        Collections.sort(list,new sortV());
        int i;
        for(i=0;i<list.size();i++)
        {
            Graph g=list.get(i);
            String from= g.getName();
            
            if(!ts.contains(from))
            {
                ts.add(from);
                ind.put(from,si);
                revInd.put(si,from);
                si++;
            }
            
        }
        Iterator it=hm.entrySet().iterator();
       
        it=ts.iterator();
       
        while(it.hasNext())
        {
            String from=(String)it.next();
            
            if(hm.containsKey(from))
                Collections.sort(hm.get(from),new sortV());
        }
        flgi=1;
    }
    
    static void displayHm()
    {
        Iterator it=hm.entrySet().iterator();
        
        while(it.hasNext())
        {
            Map.Entry mp = (Map.Entry)it.next(); 
            ArrayList<Graph> al=(ArrayList<Graph>)mp.getValue();
           
            int i;
            
            for(i=0;i<al.size();i++)
            {
                Graph g=al.get(i);
                
                JOptionPane.showMessageDialog(null, (String)mp.getKey()+" "+g.getName()+" "+g.getWeight());
            }
        }
    }
    static void displayInd()
    {
        Iterator it=ind.entrySet().iterator();
        
        while(it.hasNext())
        {
            Map.Entry mp = (Map.Entry)it.next(); 
            int al=(Integer)mp.getValue();
           
            int i;
            JOptionPane.showMessageDialog(null,(String)mp.getKey()+" "+al);
            
        }
    }
    
    int count()
    {
        int c=0;
        
        Iterator it=hm.entrySet().iterator();
        
        while(it.hasNext())
        {
            Map.Entry mp = (Map.Entry)it.next(); 
            ArrayList<Graph> al=(ArrayList<Graph>)mp.getValue();
           c+=al.size();   
        }
        
        return c;
    }
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        
        
        
        try
        {
            String file=JOptionPane.showInputDialog("Enter file location");
            FileWriter f=new FileWriter(file);
            f.write("");
            
            int i;
            f.append(list.size()+"\n");
            for(i=0;i<list.size();i++)
                f.append(list.get(i).getName()+" "+list.get(i).getX()+" "+list.get(i).getY()+"\n");
            
            Iterator it=ts.iterator();
            
            int c=count();
            
            f.append(c+"\n");
            
            while(it.hasNext())
            {
                String from=(String)it.next();
                
                if(!hm.containsKey(from))
                    continue;
                
                ArrayList<Graph>al=hm.get(from);
                
                for(i=0;i<al.size();i++)
                {
                    Graph g=al.get(i);
                    
                    f.append(from+" "+g.getName()+" "+g.getWeight()+"\n");
                }
                    
            }
            
            f.close();
            
            JOptionPane.showMessageDialog(null, "Successfully Processed");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }  
    }//GEN-LAST:event_jButton10ActionPerformed
    static ArrayList<String>src=new ArrayList<String>();
    static ArrayList<String>des=new ArrayList<String>();
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jButton11ActionPerformed
    
    
    
    
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        //displayHm()
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        result();
        new ShortestPath().setVisible(true);
       
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        new Interact().setVisible(true);
    }//GEN-LAST:event_jButton14ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vertex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vertex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vertex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vertex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vertex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
